#!/bin/bash

red="0;31m"
green="0;32m"
orange="0;33m"
blue="0;34m"
purple="0;35m"
cyan="0;36m"
white="1;37m"
yellow="1;33m"
default="0m"

# help function
usage() {
  echo -e "\n\e[$blue##########################################################\e[$default"
  echo -e "\e[$blue#\e[$default" "\e[$orange Local Linux Enumeration & Privilege Escalation Script\e[$default" "\e[$blue#\e[$default"
  echo -e "\e[$blue##########################################################\e[$default"
  echo -e "\e[$orange# www.rebootuser.com | @rebootuser \e[$default"
  echo -e "\e[$orange# $VERSION\e[$default\n"
  echo -e "\e[$orange# Example: ./LinEnum.sh -k keyword -r report -e /tmp/ -t \e[$default\n"

  echo "OPTIONS:"
  echo "-e    Enter export location"
  echo "-d    Print debug info"
  echo "-h    Displays this help text"
  echo "-k    Enter keyword"
  echo "-r    Enter report name"
  echo "-s    Supply user password for sudo checks (INSECURE)"
  echo "-t    Include thorough (lengthy) tests"

  echo -e "\n"
  echo "Running with no options = limited scans/no output file"

  echo -e "\e[$blue#########################################################\e[$default"
}

header() {
  echo -e "\n\e[$blue##########################################################\e[$default"
  echo -e "\e[$blue#\e[$default" "\e[$orange Local Linux Enumeration & Privilege Escalation Script\e[$default" "\e[$blue#\e[$default"
  echo -e "\e[$blue##########################################################\e[$default"
  echo -e "\e[$orange# www.rebootuser.com\e[$default"
  echo -e "\e[$orange# $VERSION\e[$default\n"

}

debug_info() {
  echo "[-] Debug Info"

  if [ "$export" ]; then
    echo -e "    [+] Export path              = \e[$green $export\e[$default"
  else
    echo -e "    [+] Export                   = \e[$red disabled\e[$default"
  fi

  if [ "$keyword" ]; then
    echo -e "    [+] Keyword search           = \e[$green $keyword\e[$default"
  else
    echo -e "    [+] Keyword search           = \e[$red disabled\e[$default"
  fi

  if [ "$report" ]; then
    echo -e "    [+] Reporting                = \e[$green $report\e[$default"
  else
    echo -e "    [+] Reporting                = \e[$red disabled\e[$default"
  fi

  if [ "$sudopass" ]; then
    echo -e "    [+] Sudo                     = \e[$green enabled\e[$default"
  else
    echo -e "    [+] Sudo                     = \e[$red disabled\e[$default"
  fi

  if [ "$thorough" ]; then
    echo -e "    [+] Thorough tests           = \e[$green enabled\e[$default"
  else
    echo -e "    [+] Thorough tests           = \e[$red disabled\e[$default"
  fi

  sleep 2

  if [ "$export" ]; then
    mkdir -p "$export" 2>/dev/null
    if [ ! $? -eq 0 ]; then
      echo -e "\n \e[$blue Could not create directory '$export'\e[$default"
      exit 1
    fi

    local format
    format="$export/LinEnum-export-$(date +"%d-%m-%y")"
    mkdir "$format" 2>/dev/null
  fi

  if [ "$sudopass" ]; then
    local user_password
    echo -e "\e[$purple [+] Please enter password - INSECURE - really only for CTF use!\e[$default"
    read -sr user_password
    echo
  fi

  # who=$(whoami) 2>/dev/null
  echo ""

  echo -e "\e[$orange [+] Scan started at:"
  d_stamp=$(date)
  echo " [+] $d_stamp"
  echo -e "\e[$default\n"
}

# useful binaries (thanks to https://gtfobins.github.io/)
binarylist='aria2c\|arp\|ash\|awk\|base64\|bash\|busybox\|cat\|chmod\|chown\|cp\|csh\|curl\|cut\|dash\|date\|dd\|diff\|dmsetup\|docker\|ed\|emacs\|env\|expand\|expect\|file\|find\|flock\|fmt\|fold\|ftp\|gawk\|gdb\|gimp\|git\|grep\|head\|ht\|iftop\|ionice\|ip$\|irb\|jjs\|jq\|jrunscript\|ksh\|ld.so\|ldconfig\|less\|logsave\|lua\|make\|man\|mawk\|more\|mv\|mysql\|nano\|nawk\|nc\|netcat\|nice\|nl\|nmap\|node\|od\|openssl\|perl\|pg\|php\|pic\|pico\|python\|readelf\|rlwrap\|rpm\|rpmquery\|rsync\|ruby\|run-parts\|rvim\|scp\|script\|sed\|setarch\|sftp\|sh\|shuf\|socat\|sort\|sqlite3\|ssh$\|start-stop-daemon\|stdbuf\|strace\|systemctl\|tail\|tar\|taskset\|tclsh\|tee\|telnet\|tftp\|time\|timeout\|ul\|unexpand\|uniq\|unshare\|vi\|vim\|watch\|wget\|wish\|xargs\|xxd\|zip\|zsh'

# TODO make this prettier
footer() {
  echo -e "\e[$orange############### SCAN COMPLETE ###############\e[$default"
}
